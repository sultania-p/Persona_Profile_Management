/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import model.Person;
import java.util.*;
import java.util.regex.Pattern;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author piyus
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    Person person;
    public Boolean isInValid = true;
    public Integer digiCount;
    public Integer ssnLenCount = 0;
    public String digiTeleError = "";
    public String digiCellError = "";
    public String firstNameError = "";
    public String lastNameError = "";
    public String dateOfBirthError = "";
    public String ssnError = "";
    public String ipAddressError = "";
    public String emailAddressError = "";
//    public Integer errorIndicatorTelephone = 0;
//    public Integer errorIndicatorCellphone = 0;
//    public Integer errorIndicatorFaxnumber = 0;
//    public Integer errorIndicatorSSNnumber = 0;

    
    public CreateJPanel(Person person) {
        initComponents();
        this.person = person;        
    }
    
    private void telephoneNumberDataValidation(){
        int numTelephoneNumberDigits = String.valueOf(txtTelephoneNumber.getText()).length();
            if(numTelephoneNumberDigits != 10 || txtTelephoneNumber.getText().isEmpty()){
                isInValid = true;
                digiTeleError = "Telephone number"; 
                digiCount = numTelephoneNumberDigits;
            }  
            else{
                isInValid = false;
            }
    }
    
    private void cellphoneNumberDataValidation(){
        int numCellphoneNumberDigits = String.valueOf(txtCellPhoneNumber.getText()).length();
            if(numCellphoneNumberDigits != 10 || txtCellPhoneNumber.getText().isEmpty()){
                isInValid = true;
                digiCellError = "Cellphone number"; 
                digiCount = numCellphoneNumberDigits;
            }  
            else{
                isInValid = false;
            }
    }

    private void firstNameValidation(){
        if(txtFirstName.getText().isEmpty()){
            isInValid = true;
            firstNameError = "First Name";
        }
        else{
            firstNameError = "";
        }
    }
 
    private void lastNameValidation(){
        if(txtLastName.getText().isEmpty()){
            isInValid = true;
            lastNameError = "Last Name";
        }
        else{
            lastNameError = "";
        }
    }
      
    private void dateOfBirthValidation(){
            SimpleDateFormat dateofbirth = new SimpleDateFormat("MM/dd/yyyy");
            dateofbirth.setLenient(false);
            /* Create Date object
             * parse the string into date 
             */
            try
            {
                Date javaDate = dateofbirth.parse(txtDateOfBirth.getText()); 
            }
            /* Date format is invalid */
            catch (Exception e)
            {
                //lblDateOfBirthValidation.setText("Invalid Format. Allowed MM/dd/yyyy");
                isInValid = true;
                dateOfBirthError = "Date Of Birth";
        }
    }
    
    private void ssnDataValidation(){
        if (!txtSocialSecurityNumber.getText().isEmpty() && !Pattern.matches("^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$", txtSocialSecurityNumber.getText())) {
            isInValid = true;
            ssnError = "SSN";
        }
        else{
            isInValid = false;
            ssnError = "";
        }
    }
    
    private void ipAddress(){
        String ipAddress = "^((0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)\\.){3}(0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)$";
        if (!txtIPAddress.getText().isEmpty() && !txtIPAddress.getText().matches(ipAddress)){
                isInValid = true;
                ipAddressError = "IPAddress"; 
        }    
        else{
            isInValid = false;
            ipAddressError = "";
        }
    }
    
    private void emailAddress(){
        String emailAddress = "^[\\w-\\.+]*[\\w-\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
            if (txtEmailAddress.getText().isEmpty()){
                isInValid = true;
                emailAddressError = "emailAddressEmpty";   
            }    
            else if (!txtEmailAddress.getText().isEmpty() && !txtEmailAddress.getText().matches(emailAddress)){
                isInValid = true;       
                emailAddressError = "emailAddress";  
                    }
            else{
                emailAddressError = ""; 
            }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane1 = new java.awt.ScrollPane();
        lblTitle = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblMailingAddressLine = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        lblTelephoneNumber = new javax.swing.JLabel();
        lblCellPhoneNumber = new javax.swing.JLabel();
        lblFaxNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblSocialSecurityNumber = new javax.swing.JLabel();
        lblMedicalRecordNumber = new javax.swing.JLabel();
        lblHealthPlanBeneficiaryNumber = new javax.swing.JLabel();
        lblBankAccountNumber = new javax.swing.JLabel();
        lblPhotograph = new javax.swing.JLabel();
        lblCertificateOrLicenseNumber = new javax.swing.JLabel();
        lblVehicleIdentifiersAndSerialNumbers = new javax.swing.JLabel();
        lblDeviceIdentifiersAndSerialNumbers = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtMailingAddressLine = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtDateOfBirth = new javax.swing.JTextField();
        txtTelephoneNumber = new javax.swing.JTextField();
        txtCellPhoneNumber = new javax.swing.JTextField();
        txtFaxNumber = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtSocialSecurityNumber = new javax.swing.JTextField();
        txtMedicalRecordNumber = new javax.swing.JTextField();
        txtHealthPlanBeneficiaryNumber = new javax.swing.JTextField();
        txtBankAccountNumber = new javax.swing.JTextField();
        txtCertificateOrLicenseNumber = new javax.swing.JTextField();
        txtVehicleIdentifiersAndSerialNumbers = new javax.swing.JTextField();
        txtDeviceIdentifiersAndSerialNumbers = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblZipCodeValidation = new javax.swing.JLabel();
        btnPhotograph = new javax.swing.JButton();
        lblFirstNameValidation = new javax.swing.JLabel();
        lblLastNameValidation = new javax.swing.JLabel();
        lblCityValidation = new javax.swing.JLabel();
        lblStateValidation = new javax.swing.JLabel();
        lblDateOfBirthValidation = new javax.swing.JLabel();
        lblTelephoneNumberValidation = new javax.swing.JLabel();
        lblCellPhoneNumberValidation = new javax.swing.JLabel();
        lblFaxNumberValidation = new javax.swing.JLabel();
        lblBankAccountNumberValidation = new javax.swing.JLabel();
        lblLinkedInAddress = new javax.swing.JLabel();
        txtLinkedInAddress = new javax.swing.JTextField();
        lblLinkedInAddressValidation = new javax.swing.JLabel();
        lblIPAddress = new javax.swing.JLabel();
        txtIPAddress = new javax.swing.JTextField();
        lblIPAddressValidation = new javax.swing.JLabel();
        lblCountryValidation = new javax.swing.JLabel();
        lblSocialSecurityNumberValidation = new javax.swing.JLabel();
        lblEmailAddressValidation = new javax.swing.JLabel();
        lblMandatoryNotification = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(500, 475));

        lblTitle.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 15)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create Persona Profile");

        lblFirstName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFirstName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFirstName.setText("First Name*:");

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblLastName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLastName.setText("Last Name*:");

        lblMailingAddressLine.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMailingAddressLine.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMailingAddressLine.setText("Mailing Address Line:");

        lblCity.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City:");

        lblState.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblState.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblState.setText("State:");

        lblZipCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblZipCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblZipCode.setText("Zip Code:");

        lblCountry.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCountry.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCountry.setText("Country:");

        lblDateOfBirth.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDateOfBirth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDateOfBirth.setText("Date Of Birth*:");

        lblTelephoneNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTelephoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTelephoneNumber.setText("Telephone Number*:");

        lblCellPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCellPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCellPhoneNumber.setText("Cell Phone Number*:");

        lblFaxNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFaxNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFaxNumber.setText("Fax Number:");

        lblEmailAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblEmailAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmailAddress.setText("Email Address*:");

        lblSocialSecurityNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSocialSecurityNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSocialSecurityNumber.setText("Social Security Number:");

        lblMedicalRecordNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMedicalRecordNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMedicalRecordNumber.setText("Medical Record Number:");

        lblHealthPlanBeneficiaryNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHealthPlanBeneficiaryNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHealthPlanBeneficiaryNumber.setText("Health Plan Beneficiary Number:");

        lblBankAccountNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBankAccountNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBankAccountNumber.setText("Bank Account Number:");

        lblPhotograph.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPhotograph.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPhotograph.setText("Photograph:");

        lblCertificateOrLicenseNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCertificateOrLicenseNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCertificateOrLicenseNumber.setText("Certificate Or License Number:");

        lblVehicleIdentifiersAndSerialNumbers.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblVehicleIdentifiersAndSerialNumbers.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblVehicleIdentifiersAndSerialNumbers.setText("Vehicle Identifiers And Serial Numbers:");

        lblDeviceIdentifiersAndSerialNumbers.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDeviceIdentifiersAndSerialNumbers.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDeviceIdentifiersAndSerialNumbers.setText("Device Identifiers And Serial Numbers:");

        txtFirstName.setToolTipText("Please enter the First Name");
        txtFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFirstNameFocusGained(evt);
            }
        });
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyPressed(evt);
            }
        });

        txtLastName.setToolTipText("Please enter the Last Name");
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLastNameKeyPressed(evt);
            }
        });

        txtMailingAddressLine.setToolTipText("Please enter the Present Mailing Address");
        txtMailingAddressLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailingAddressLineActionPerformed(evt);
            }
        });

        txtCity.setToolTipText("Please enter the city");
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        txtState.setToolTipText("Please enter the state");
        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });
        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStateKeyPressed(evt);
            }
        });

        txtZipCode.setToolTipText("Please enter the area Zip Code");
        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyPressed(evt);
            }
        });

        txtCountry.setToolTipText("Please enter the country name");
        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });
        txtCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCountryKeyPressed(evt);
            }
        });

        txtDateOfBirth.setToolTipText("Please enter the date of birth in mm/dd/yyyy format");
        txtDateOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateOfBirthActionPerformed(evt);
            }
        });

        txtTelephoneNumber.setToolTipText("Please enter the residence telephone number in XXXXXXXXXX format");
        txtTelephoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelephoneNumberActionPerformed(evt);
            }
        });
        txtTelephoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelephoneNumberKeyPressed(evt);
            }
        });

        txtCellPhoneNumber.setToolTipText("Please enter the cell number in XXXXXXXXXX format");
        txtCellPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCellPhoneNumberActionPerformed(evt);
            }
        });
        txtCellPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCellPhoneNumberKeyPressed(evt);
            }
        });

        txtFaxNumber.setToolTipText("Please enter the FAX number in XXXXXXXXXX format");
        txtFaxNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFaxNumberActionPerformed(evt);
            }
        });
        txtFaxNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFaxNumberKeyPressed(evt);
            }
        });

        txtEmailAddress.setToolTipText("Please enter the personal email address");
        txtEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddressActionPerformed(evt);
            }
        });

        txtSocialSecurityNumber.setToolTipText("Please enter the SSN number in XXX-XX-XXXX format");
        txtSocialSecurityNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSocialSecurityNumberActionPerformed(evt);
            }
        });
        txtSocialSecurityNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSocialSecurityNumberKeyPressed(evt);
            }
        });

        txtMedicalRecordNumber.setToolTipText("Please enter the medical record number");
        txtMedicalRecordNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalRecordNumberActionPerformed(evt);
            }
        });

        txtHealthPlanBeneficiaryNumber.setToolTipText("Please enter the health plan beneficiary number");
        txtHealthPlanBeneficiaryNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthPlanBeneficiaryNumberActionPerformed(evt);
            }
        });

        txtBankAccountNumber.setToolTipText("Please enter the primary bank account number");
        txtBankAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBankAccountNumberActionPerformed(evt);
            }
        });
        txtBankAccountNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBankAccountNumberKeyPressed(evt);
            }
        });

        txtCertificateOrLicenseNumber.setToolTipText("Please enter the License number");
        txtCertificateOrLicenseNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCertificateOrLicenseNumberActionPerformed(evt);
            }
        });

        txtVehicleIdentifiersAndSerialNumbers.setToolTipText("Please enter the Vehicle Identifier number");
        txtVehicleIdentifiersAndSerialNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleIdentifiersAndSerialNumbersActionPerformed(evt);
            }
        });

        txtDeviceIdentifiersAndSerialNumbers.setToolTipText("Please enter the Device Identifier number");
        txtDeviceIdentifiersAndSerialNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceIdentifiersAndSerialNumbersActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblZipCodeValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblZipCodeValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        btnPhotograph.setText("Upload a Photo Image");
        btnPhotograph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotographActionPerformed(evt);
            }
        });

        lblFirstNameValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblFirstNameValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblLastNameValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblLastNameValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblCityValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblCityValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblStateValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblStateValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblDateOfBirthValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblDateOfBirthValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblTelephoneNumberValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblTelephoneNumberValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblCellPhoneNumberValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblCellPhoneNumberValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblFaxNumberValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblFaxNumberValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblBankAccountNumberValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblBankAccountNumberValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblLinkedInAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblLinkedInAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLinkedInAddress.setText("LinkedIn Address:");

        txtLinkedInAddress.setToolTipText("Please enter the LinkedIn address");
        txtLinkedInAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkedInAddressActionPerformed(evt);
            }
        });

        lblLinkedInAddressValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblLinkedInAddressValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIPAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblIPAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIPAddress.setText("IP Address:");

        txtIPAddress.setToolTipText("Please enter the IP Address in XX.XX.XX.XX format");
        txtIPAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPAddressActionPerformed(evt);
            }
        });
        txtIPAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIPAddressKeyPressed(evt);
            }
        });

        lblIPAddressValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblIPAddressValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblCountryValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblCountryValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblSocialSecurityNumberValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblSocialSecurityNumberValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblEmailAddressValidation.setForeground(new java.awt.Color(255, 51, 51));
        lblEmailAddressValidation.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblMandatoryNotification.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMandatoryNotification.setForeground(new java.awt.Color(255, 0, 0));
        lblMandatoryNotification.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMandatoryNotification.setText("(Fields marked * are mandatory)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPhotograph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMedicalRecordNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHealthPlanBeneficiaryNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSocialSecurityNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBankAccountNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCellPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFaxNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmailAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelephoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateOfBirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCountry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblZipCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMailingAddressLine, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDeviceIdentifiersAndSerialNumbers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblVehicleIdentifiersAndSerialNumbers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCertificateOrLicenseNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLinkedInAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblIPAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblMandatoryNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMailingAddressLine, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtState, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                                .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSocialSecurityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMedicalRecordNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtHealthPlanBeneficiaryNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBankAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCertificateOrLicenseNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtVehicleIdentifiersAndSerialNumbers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDeviceIdentifiersAndSerialNumbers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLinkedInAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIPAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnPhotograph, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblTelephoneNumberValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLastNameValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblFirstNameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCityValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStateValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateOfBirthValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCellPhoneNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFaxNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBankAccountNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLinkedInAddressValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIPAddressValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZipCodeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountryValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSocialSecurityNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAddressValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtBankAccountNumber, txtCellPhoneNumber, txtCertificateOrLicenseNumber, txtCity, txtCountry, txtDateOfBirth, txtDeviceIdentifiersAndSerialNumbers, txtEmailAddress, txtFaxNumber, txtFirstName, txtHealthPlanBeneficiaryNumber, txtLastName, txtMailingAddressLine, txtMedicalRecordNumber, txtSocialSecurityNumber, txtState, txtTelephoneNumber, txtVehicleIdentifiersAndSerialNumbers, txtZipCode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblFirstNameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblLastNameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMailingAddressLine)
                    .addComponent(txtMailingAddressLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCity)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCityValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblState)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblStateValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblZipCode)
                                .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblZipCodeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCountry)
                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblCountryValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDateOfBirth)
                            .addComponent(txtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblTelephoneNumber)
                                        .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTelephoneNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCellPhoneNumber)
                                        .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCellPhoneNumberValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFaxNumber)
                                    .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblFaxNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblDateOfBirthValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmailAddress)
                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSocialSecurityNumber)
                                .addComponent(txtSocialSecurityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblSocialSecurityNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMedicalRecordNumber)
                            .addComponent(txtMedicalRecordNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHealthPlanBeneficiaryNumber)
                            .addComponent(txtHealthPlanBeneficiaryNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBankAccountNumber)
                                .addComponent(txtBankAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblBankAccountNumberValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPhotograph)
                            .addComponent(lblPhotograph, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCertificateOrLicenseNumber)
                            .addComponent(txtCertificateOrLicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVehicleIdentifiersAndSerialNumbers)
                            .addComponent(txtVehicleIdentifiersAndSerialNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDeviceIdentifiersAndSerialNumbers)
                            .addComponent(txtDeviceIdentifiersAndSerialNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblLinkedInAddress)
                                        .addComponent(txtLinkedInAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblLinkedInAddressValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblIPAddress)
                                    .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblIPAddressValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblEmailAddressValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addComponent(lblMandatoryNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtBankAccountNumber, txtCellPhoneNumber, txtCertificateOrLicenseNumber, txtCity, txtCountry, txtDateOfBirth, txtDeviceIdentifiersAndSerialNumbers, txtEmailAddress, txtFaxNumber, txtFirstName, txtHealthPlanBeneficiaryNumber, txtLastName, txtMailingAddressLine, txtMedicalRecordNumber, txtSocialSecurityNumber, txtState, txtTelephoneNumber, txtVehicleIdentifiersAndSerialNumbers, txtZipCode});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblBankAccountNumberValidation, lblCellPhoneNumberValidation, lblFaxNumberValidation, lblTelephoneNumberValidation});

    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtMailingAddressLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailingAddressLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailingAddressLineActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        telephoneNumberDataValidation();
        cellphoneNumberDataValidation();
        ssnDataValidation();
        firstNameValidation();
        lastNameValidation();
        dateOfBirthValidation();
        ipAddress();
        emailAddress();
        
        // Validations for text fields
        if (isInValid || digiTeleError == "Telephone number" || 
                digiCellError == "Cellphone number" || firstNameError == "First Name" || lastNameError == "Last Name" || 
                dateOfBirthError == "Date Of Birth" || ssnError == "SSN" || ipAddressError == "IPAddress" || 
                emailAddressError == "emailAddressEmpty" || emailAddressError == "emailAddress"){   
                    if((digiCount == 0 || digiCount != 10) && digiTeleError == "Telephone number" && digiCellError == ""){
                                lblTelephoneNumberValidation.setText("Incorrect Telephone number!");
                    }
                    if((digiCount == 0 || digiCount != 10) && digiCellError == "Cellphone number" && digiTeleError == ""){
                                lblCellPhoneNumberValidation.setText("Incorrect Cellphone number!");
                    }
                    if((digiCount == 0 || digiCount != 10) && digiTeleError == "Telephone number" && digiCellError == "Cellphone number"){
                                lblTelephoneNumberValidation.setText("Incorrect Telephone number!");
                                lblCellPhoneNumberValidation.setText("Incorrect Cellphone number!");
                    }
                    if(firstNameError == "First Name") {
                        lblFirstNameValidation.setText("First name cannot be blank!");
                    }
                    if(lastNameError == "Last Name") {
                        lblLastNameValidation.setText("Last name cannot be blank!");
                    }
                    if(dateOfBirthError == "Date Of Birth"){
                        lblDateOfBirthValidation.setText("Invalid Format. Allowed MM/dd/yyyy");
                    }
                    if(ssnError == "SSN"){
                        lblSocialSecurityNumberValidation.setText("Incorrect SSN format!");
                    }
                    if(ipAddressError == "IPAddress"){
                        lblIPAddressValidation.setText("Incorrect IP Address format!");
                    }
                    if(emailAddressError == "emailAddressEmpty"){
                        lblEmailAddressValidation.setText("Email address cannot be empty!");
                    }
                    if(emailAddressError == "emailAddress"){
                        lblEmailAddressValidation.setText("Incorrect email Address!");
                    }
                    digiCellError = "";
                    digiTeleError = "";
                    firstNameError = "";
                    lastNameError = "";
                    dateOfBirthError = "";
                    ssnError = "";
                    ipAddressError = "";
                    emailAddressError = "";
        }       
        else{
            
            telephoneNumberDataValidation();
            cellphoneNumberDataValidation();
            ssnDataValidation();
            firstNameValidation();
            lastNameValidation();
            dateOfBirthValidation();
            ssnDataValidation();
            ipAddress();
            emailAddress();
            
            digiCellError = "";
            digiTeleError = "";
            firstNameError = "";
            lastNameError = "";
            dateOfBirthError = "";
            ssnError = "";
            ipAddressError = "";
            emailAddressError = "";
            
            // start setting values to attributes
            person.setFirstName(txtFirstName.getText());
            person.setLastName(txtLastName.getText());
            person.setMailingAddressLine(txtMailingAddressLine.getText());
            person.setCity(txtCity.getText());
            person.setState(txtState.getText());
        
            try{
                person.setZipCode(Integer.parseInt(txtZipCode.getText()));
            }
            catch(Exception e){
            }

            person.setCountry(txtCountry.getText());
            person.setDateOfBirth(txtDateOfBirth.getText());        
            person.setTelephoneNumber(Long.parseLong(txtTelephoneNumber.getText()));
            person.setCellPhoneNumber(Long.parseLong(txtCellPhoneNumber.getText()));
        
            try{
                person.setFaxNumber(Long.parseLong(txtFaxNumber.getText()));        
            }
            catch(Exception e){
            }
                      
            person.setEmailAddress(txtEmailAddress.getText());
            
            try{
                person.setSocialSecurityNumber(txtSocialSecurityNumber.getText());
            }
            catch(Exception e){
            }
            
            person.setMedicalRecordNumber(txtMedicalRecordNumber.getText());
            person.setHealthPlanBeneficiaryNumber(txtHealthPlanBeneficiaryNumber.getText());

            try{
                person.setBankAccountNumber(Integer.parseInt(txtBankAccountNumber.getText()));
            }
            catch(Exception e){
            }
        
            person.setCertificateOrLicenseNumber(txtCertificateOrLicenseNumber.getText());
            person.setVehicleIdentifiersAndSerialNumbers(txtVehicleIdentifiersAndSerialNumbers.getText());
            person.setDeviceIdentifiersAndSerialNumbers(txtDeviceIdentifiersAndSerialNumbers.getText());
            person.setLinkedInAddress(txtLinkedInAddress.getText());
            person.setIPAddress(txtIPAddress.getText());
        
            JOptionPane.showMessageDialog(this, "Person Information Saved Successfully!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDateOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateOfBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateOfBirthActionPerformed

    private void txtTelephoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelephoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelephoneNumberActionPerformed

    private void txtCellPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCellPhoneNumberActionPerformed

    private void txtFaxNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFaxNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFaxNumberActionPerformed

    private void txtEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailAddressActionPerformed

    private void txtSocialSecurityNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSocialSecurityNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSocialSecurityNumberActionPerformed

    private void txtMedicalRecordNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalRecordNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalRecordNumberActionPerformed

    private void txtHealthPlanBeneficiaryNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthPlanBeneficiaryNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthPlanBeneficiaryNumberActionPerformed

    private void txtBankAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBankAccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankAccountNumberActionPerformed

    private void btnPhotographActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhotographActionPerformed
        // TODO add your handling code here:
      BioIdentifier BImage = new BioIdentifier();
      String Path = BImage.imageload();        
      
      person.setPath(Path);
      
    }//GEN-LAST:event_btnPhotographActionPerformed

    private void txtCertificateOrLicenseNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCertificateOrLicenseNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCertificateOrLicenseNumberActionPerformed

    private void txtVehicleIdentifiersAndSerialNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleIdentifiersAndSerialNumbersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleIdentifiersAndSerialNumbersActionPerformed

    private void txtDeviceIdentifiersAndSerialNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceIdentifiersAndSerialNumbersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceIdentifiersAndSerialNumbersActionPerformed

    private void txtZipCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyPressed
        // TODO add your handling code here:
        // KeyPressed Event
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtZipCode.setEditable(false);
            lblZipCodeValidation.setText("Please enter number only!");
        }
        else
        {
            txtZipCode.setEditable(true);
            lblZipCodeValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtZipCodeKeyPressed

    private void txtFirstNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            txtFirstName.setEditable(false);
            lblFirstNameValidation.setText("Please enter letters only!");
        }
        else
        {
            txtFirstName.setEditable(true);
            lblFirstNameValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtFirstNameKeyPressed

    private void txtLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            txtLastName.setEditable(false);
            lblLastNameValidation.setText("Please enter letters only!");
        }
        else
        {
            txtLastName.setEditable(true);
            lblLastNameValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtLastNameKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:
                     
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            txtCity.setEditable(false);
            lblCityValidation.setText("Please enter letters only!");
        }
        else
        {
            txtCity.setEditable(true);
            lblCityValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtStateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            txtState.setEditable(false);
            lblStateValidation.setText("Please enter letters only!");
        }
        else
        {
            txtState.setEditable(true);
            lblStateValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtStateKeyPressed

    private void txtCountryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCountryKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            txtCountry.setEditable(false);
            lblCountryValidation.setText("Please enter letters only!");
        }
        else
        {
            txtCountry.setEditable(true);
            lblCountryValidation.setText(""); // To disable the warnings once user feed correct character
        }  
    }//GEN-LAST:event_txtCountryKeyPressed

    private void txtFirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameFocusGained

    private void txtTelephoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneNumberKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtTelephoneNumber.setEditable(false);
            lblTelephoneNumberValidation.setText("Please enter number only!");
        }
        else
        {
            txtTelephoneNumber.setEditable(true);
            lblTelephoneNumberValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtTelephoneNumberKeyPressed

    private void txtCellPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtCellPhoneNumber.setEditable(false);
            lblCellPhoneNumberValidation.setText("Please enter number only!");
        }
        else
        {
            txtCellPhoneNumber.setEditable(true);
            lblCellPhoneNumberValidation.setText(""); // To disable the warnings once user feed correct character
        }
    }//GEN-LAST:event_txtCellPhoneNumberKeyPressed

    private void txtFaxNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFaxNumberKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtFaxNumber.setEditable(false);
            lblFaxNumberValidation.setText("Please enter number only!");
        }
        else
        {
            txtFaxNumber.setEditable(true);
            lblFaxNumberValidation.setText(""); // To disable the warnings once user feed correct character
        }        
    }//GEN-LAST:event_txtFaxNumberKeyPressed

    private void txtBankAccountNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBankAccountNumberKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtBankAccountNumber.setEditable(false);
            lblBankAccountNumberValidation.setText("Please enter number only!");
        }
        else
        {
            txtBankAccountNumber.setEditable(true);
            lblBankAccountNumberValidation.setText(""); // To disable the warnings once user feed correct character
        } 
    }//GEN-LAST:event_txtBankAccountNumberKeyPressed

    private void txtLinkedInAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkedInAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkedInAddressActionPerformed

    private void txtIPAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPAddressActionPerformed

    private void txtIPAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPAddressKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtIPAddress.setEditable(false);
            //lblCityValidation.setText("Please enter numbers only!");
        }
        else
        {
            txtIPAddress.setEditable(true);
            lblIPAddressValidation.setText(""); // To disable the warnings once user feed correct character
        }  
    }//GEN-LAST:event_txtIPAddressKeyPressed

    private void txtSocialSecurityNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSocialSecurityNumberKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtSocialSecurityNumber.setEditable(false);
        }
        else
        {
            txtSocialSecurityNumber.setEditable(true);
            lblSocialSecurityNumberValidation.setText(""); // To disable the warnings once user feed correct character
        }               
    }//GEN-LAST:event_txtSocialSecurityNumberKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPhotograph;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblBankAccountNumber;
    private javax.swing.JLabel lblBankAccountNumberValidation;
    private javax.swing.JLabel lblCellPhoneNumber;
    private javax.swing.JLabel lblCellPhoneNumberValidation;
    private javax.swing.JLabel lblCertificateOrLicenseNumber;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityValidation;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblCountryValidation;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDateOfBirthValidation;
    private javax.swing.JLabel lblDeviceIdentifiersAndSerialNumbers;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblEmailAddressValidation;
    private javax.swing.JLabel lblFaxNumber;
    private javax.swing.JLabel lblFaxNumberValidation;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFirstNameValidation;
    private javax.swing.JLabel lblHealthPlanBeneficiaryNumber;
    private javax.swing.JLabel lblIPAddress;
    private javax.swing.JLabel lblIPAddressValidation;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLastNameValidation;
    private javax.swing.JLabel lblLinkedInAddress;
    private javax.swing.JLabel lblLinkedInAddressValidation;
    private javax.swing.JLabel lblMailingAddressLine;
    private javax.swing.JLabel lblMandatoryNotification;
    private javax.swing.JLabel lblMedicalRecordNumber;
    private javax.swing.JLabel lblPhotograph;
    private javax.swing.JLabel lblSocialSecurityNumber;
    private javax.swing.JLabel lblSocialSecurityNumberValidation;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStateValidation;
    private javax.swing.JLabel lblTelephoneNumber;
    private javax.swing.JLabel lblTelephoneNumberValidation;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVehicleIdentifiersAndSerialNumbers;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JLabel lblZipCodeValidation;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTextField txtBankAccountNumber;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtCertificateOrLicenseNumber;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtDateOfBirth;
    private javax.swing.JTextField txtDeviceIdentifiersAndSerialNumbers;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFaxNumber;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHealthPlanBeneficiaryNumber;
    private javax.swing.JTextField txtIPAddress;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtLinkedInAddress;
    private javax.swing.JTextField txtMailingAddressLine;
    private javax.swing.JTextField txtMedicalRecordNumber;
    private javax.swing.JTextField txtSocialSecurityNumber;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtTelephoneNumber;
    private javax.swing.JTextField txtVehicleIdentifiersAndSerialNumbers;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
